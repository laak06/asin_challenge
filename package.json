{
  "name": "excel-to-database-cli",
  "version": "1.0.0",
  "description": "A command-line application that reads an Excel file from stdin and saves the data to a SQLite database",
  "main": "src/index.js",
  "bin": {
    "excel-to-db": "src/index.js"
  },
  "directories": {
    "test": "tests"
  },
  "scripts": {
    "start": "node src/index.js",
    "start:docker": "node src/index.js --mysql-port=3308 --pg-port=5433",
    "test": "jest",
    "test:coverage": "jest --coverage",
    "test:coverage:clean": "rm -rf coverage && jest --coverage",
    "lint": "eslint src tests",
    "check:mysql": "node scripts/check-mysql.js",
    "check:postgres": "node scripts/check-postgres.js",
    "ensure:dirs": "node scripts/ensure-directories.js",
    "wait:mysql": "node scripts/wait-for-db.js mysql",
    "wait:postgres": "node scripts/wait-for-db.js postgres",
    "pretest": "npm run ensure:dirs",
    "test:mysql": "docker-compose -f docker-compose.test.yml up -d && npm run wait:mysql && MYSQL_HOST=localhost MYSQL_PORT=3308 MYSQL_PASSWORD=test_password TEST_MYSQL=true npm test && docker-compose -f docker-compose.test.yml down",
    "test:postgres": "docker-compose -f docker-compose.test.yml up -d && npm run wait:postgres && POSTGRES_HOST=localhost POSTGRES_PORT=5433 POSTGRES_PASSWORD=test_password TEST_POSTGRES=true npm test && docker-compose -f docker-compose.test.yml down",
    "test:all": "docker-compose -f docker-compose.test.yml up -d && npm run wait:mysql && npm run wait:postgres && MYSQL_HOST=localhost MYSQL_PORT=3308 MYSQL_PASSWORD=test_password POSTGRES_HOST=localhost POSTGRES_PORT=5433 POSTGRES_PASSWORD=test_password TEST_MYSQL=true TEST_POSTGRES=true npm test && docker-compose -f docker-compose.test.yml down",
    "test:docker": "docker-compose -f docker-compose.test.yml up -d && npm run wait:mysql && npm run wait:postgres && MYSQL_HOST=localhost MYSQL_PORT=3308 MYSQL_PASSWORD=test_password POSTGRES_HOST=localhost POSTGRES_PORT=5433 POSTGRES_PASSWORD=test_password TEST_MYSQL=true TEST_POSTGRES=true npm test && docker-compose -f docker-compose.test.yml down",
    "test:env": "node -r dotenv/config -e \"require('dotenv').config({path: '.env.test'})\" && TEST_MYSQL=true TEST_POSTGRES=true npm test",
    "test:summary": "node scripts/parse-test-logs.js",
    "test:coverage:all": "docker-compose -f docker-compose.test.yml up -d && npm run wait:mysql && npm run wait:postgres && MYSQL_HOST=localhost MYSQL_PORT=3308 MYSQL_PASSWORD=test_password POSTGRES_HOST=localhost POSTGRES_PORT=5433 POSTGRES_PASSWORD=test_password TEST_MYSQL=true TEST_POSTGRES=true npm run test:coverage && docker-compose -f docker-compose.test.yml down",
    "test:coverage:mysql": "docker-compose -f docker-compose.test.yml up -d && npm run wait:mysql && MYSQL_HOST=localhost MYSQL_PORT=3308 MYSQL_PASSWORD=test_password TEST_MYSQL=true npm run test:coverage && docker-compose -f docker-compose.test.yml down",
    "test:coverage:postgres": "docker-compose -f docker-compose.test.yml up -d && npm run wait:postgres && POSTGRES_HOST=localhost POSTGRES_PORT=5433 POSTGRES_PASSWORD=test_password TEST_POSTGRES=true npm run test:coverage && docker-compose -f docker-compose.test.yml down",
    "test:full": "npm test && npm run test:mysql && npm run test:postgres && npm run test:all",
    "test:coverage:full": "npm run test:coverage && npm run test:coverage:mysql && npm run test:coverage:postgres && npm run test:coverage:all",
    "build": "npm run lint && npm test && mkdir -p dist && cp -r src package.json README.md .env.example dist/",
    "package": "npm run build && pkg --targets node16-linux-x64,node16-macos-x64,node16-win-x64 --output dist/excel-to-db dist/package.json",
    "test:perf": "node examples/performance-test.js && node examples/visualize-performance.js",
    "clean": "rm -rf dist coverage",
    "release": "node scripts/create-release.js",
    "release:patch": "node scripts/create-release.js patch",
    "release:minor": "node scripts/create-release.js minor",
    "release:major": "node scripts/create-release.js major"
  },
  "keywords": [
    "excel",
    "database",
    "cli",
    "sqlite",
    "import"
  ],
  "author": "",
  "license": "ISC",
  "type": "commonjs",
  "dependencies": {
    "chalk": "^4.1.2",
    "dotenv": "^16.3.1",
    "jest": "^29.7.0",
    "mysql2": "^3.13.0",
    "pg": "^8.14.0",
    "sqlite3": "^5.1.6",
    "xlsx": "^0.18.5"
  },
  "devDependencies": {
    "@eslint/js": "^9.22.0",
    "@types/jest": "^29.5.5",
    "@types/node": "^20.8.2",
    "eslint": "^9.22.0",
    "eslint-plugin-jest": "^28.11.0",
    "pkg": "^5.8.1",
    "supertest": "^6.3.3"
  },
  "jest": {
    "testEnvironment": "node",
    "collectCoverageFrom": [
      "src/**/*.js"
    ],
    "coverageDirectory": "./coverage",
    "coverageReporters": [
      "json",
      "lcov",
      "text",
      "clover"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 25,
        "functions": 45,
        "lines": 40,
        "statements": 40
      }
    },
    "forceExit": true,
    "testTimeout": 10000,
    "setupFilesAfterEnv": [
      "<rootDir>/tests/setup.js"
    ]
  },
  "engines": {
    "node": ">=12.0.0"
  }
}
